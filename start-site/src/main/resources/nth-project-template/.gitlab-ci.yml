# use maven docker image to build and deploy application
# image: maven:latest
image: maven:3-openjdk-17

variables:
  DOCKER_DRIVER: overlay2
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Dmaven.wagon.http.ssl.insecure=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -T 1.5C"
  
before_script:
 - "echo '10.50.109.10 dev1-git1.loc.ch' >> /etc/hosts"
 - "mkdir -p .m2"
 - echo '<?xml version="1.0" encoding="UTF-8"?>
   <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
   <servers>
   <server>
   <id>deployment</id>
   <username>${env.NEXUS_USER}</username>
   <password>${env.NEXUS_PASSWORD}</password>
   </server>
   </servers>
   </settings>' > .m2/settings.xml

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  paths:
    - .m2/repository

# Maven 'clean deploy' na develop i master branchevima
deploy:maven-clean-deploy:
  stage: deploy
  script:
    - 'mvn $MAVEN_CLI_OPTS clean deploy'
  only:
    - develop
    - master

# Maven manual 'clean deploy'
build:maven-manual-deploy:
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS clean deploy'
  when: manual

# Maven 'clean test' na svemu osim master i develop
verify:maven-clean-verify:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS clean verify'
  except:
    - master
    - develop